// This file was generated by Mendix Business Modeler.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package vehiclelookup.proxies;

/**
 * 
 */
public class TestResultObj
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject testResultObjMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "VehicleLookUp.TestResultObj";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		test_results("VehicleLookUp.test_results"),
		advisories("VehicleLookUp.advisories"),
		failures("VehicleLookUp.failures");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public TestResultObj(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "VehicleLookUp.TestResultObj"));
	}

	protected TestResultObj(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject testResultObjMendixObject)
	{
		if (testResultObjMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("VehicleLookUp.TestResultObj", testResultObjMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a VehicleLookUp.TestResultObj");

		this.testResultObjMendixObject = testResultObjMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'TestResultObj.load(IContext, IMendixIdentifier)' instead.
	 */
	@Deprecated
	public static vehiclelookup.proxies.TestResultObj initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return vehiclelookup.proxies.TestResultObj.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.getSudoContext() can be used to obtain sudo access).
	 */
	public static vehiclelookup.proxies.TestResultObj initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new vehiclelookup.proxies.TestResultObj(context, mendixObject);
	}

	public static vehiclelookup.proxies.TestResultObj load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return vehiclelookup.proxies.TestResultObj.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of test_results
	 */
	public final vehiclelookup.proxies.MOTHistoryObj gettest_results() throws com.mendix.core.CoreException
	{
		return gettest_results(getContext());
	}

	/**
	 * @param context
	 * @return value of test_results
	 */
	public final vehiclelookup.proxies.MOTHistoryObj gettest_results(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		vehiclelookup.proxies.MOTHistoryObj result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.test_results.toString());
		if (identifier != null)
			result = vehiclelookup.proxies.MOTHistoryObj.load(context, identifier);
		return result;
	}

	/**
	 * Set value of test_results
	 * @param test_results
	 */
	public final void settest_results(vehiclelookup.proxies.MOTHistoryObj test_results)
	{
		settest_results(getContext(), test_results);
	}

	/**
	 * Set value of test_results
	 * @param context
	 * @param test_results
	 */
	public final void settest_results(com.mendix.systemwideinterfaces.core.IContext context, vehiclelookup.proxies.MOTHistoryObj test_results)
	{
		if (test_results == null)
			getMendixObject().setValue(context, MemberNames.test_results.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.test_results.toString(), test_results.getMendixObject().getId());
	}

	/**
	 * @return value of advisories
	 */
	public final java.util.List<vehiclelookup.proxies.AdvisoryObj> getadvisories() throws com.mendix.core.CoreException
	{
		return getadvisories(getContext());
	}

	/**
	 * @param context
	 * @return value of advisories
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<vehiclelookup.proxies.AdvisoryObj> getadvisories(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<vehiclelookup.proxies.AdvisoryObj> result = new java.util.ArrayList<vehiclelookup.proxies.AdvisoryObj>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.advisories.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(vehiclelookup.proxies.AdvisoryObj.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of advisories
	 * @param advisories
	 */
	public final void setadvisories(java.util.List<vehiclelookup.proxies.AdvisoryObj> advisories)
	{
		setadvisories(getContext(), advisories);
	}

	/**
	 * Set value of advisories
	 * @param context
	 * @param advisories
	 */
	public final void setadvisories(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<vehiclelookup.proxies.AdvisoryObj> advisories)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (vehiclelookup.proxies.AdvisoryObj proxyObject : advisories)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.advisories.toString(), identifiers);
	}

	/**
	 * @return value of failures
	 */
	public final java.util.List<vehiclelookup.proxies.FailuresObj> getfailures() throws com.mendix.core.CoreException
	{
		return getfailures(getContext());
	}

	/**
	 * @param context
	 * @return value of failures
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<vehiclelookup.proxies.FailuresObj> getfailures(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<vehiclelookup.proxies.FailuresObj> result = new java.util.ArrayList<vehiclelookup.proxies.FailuresObj>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.failures.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(vehiclelookup.proxies.FailuresObj.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of failures
	 * @param failures
	 */
	public final void setfailures(java.util.List<vehiclelookup.proxies.FailuresObj> failures)
	{
		setfailures(getContext(), failures);
	}

	/**
	 * Set value of failures
	 * @param context
	 * @param failures
	 */
	public final void setfailures(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<vehiclelookup.proxies.FailuresObj> failures)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (vehiclelookup.proxies.FailuresObj proxyObject : failures)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.failures.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return testResultObjMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final vehiclelookup.proxies.TestResultObj that = (vehiclelookup.proxies.TestResultObj) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "VehicleLookUp.TestResultObj";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
